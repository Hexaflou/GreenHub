Afin de clairement définir les interfaces de communication dans notre application, une spécification de l'API de monitoring est nécessaire.
Le module de monitoring s'occupe de la communication avec les capteurs (EnOcean et SunSpot) et rend compte des valeurs de ceux-ci à une base de données et au serveur C.
Un capteur EnOcean et SunSpot envoie périodiquement une trame au récepteur EnOcean, qui retransmet le message au module de monitoring. Ce capteur est identifié par un ID unique, contenue dans la trame et étant constitué de 8 caractères. Il en est de même pour le SunSpot. Les ID des EnOcean et SunSpot étant construit différemment au départ, nous construisons un nouvel identifiant qui prend en compte cette différenciation.
De plus étant donné qu'un capteur peut fournir différentes mesures (présence et luminescence par exemple) et que nous voulons ne consulter qu'un seul type de valeur à la fois, nous diviserons les capteurs de différentes mesures en capteur d'une mesure (le capteur de présence et luminescence sera représenté par deux capteurs : un de présence et un de luminescence). Ainsi donc l'identifiant final de notre capteur aura comme dernier caractère la mesure de celui-ci :
	- 'L' : Light <=> Correspondant à un capteur de luminescence.
	- 'T' : Temperature <=> Correspondant à un capteur de température
	- 'C' : Contact <=> Correspondant à un capteur de de contact (porte, fenêtre, ...)
	- 'S' : Switch <=> Correspondant à un capteur de bouton poussoir (interrupteur)
	

Quant à l'identification de la marque du capteur, EnOcean ou SunSpot, tout se fera par le premier caractère de l'ID :
	- 's' pour sunSpot
	- 'e' pour EnOcean
	
Ainsi nous aurons donc un ID de 10 caractères :
	
Prenons les bits les plus à gauche comme les bits de poids forts.

	- Bit 9 : 'e' ou 's' pour la marque du capteur.
	- Bit 8 - 1 : ID unique de fabrication du capteur
	- Bit 0 : Type de mesure qu'effectue le capteur.
	
L'utilisation de l'API se résume à l'utilisation d'une fonction : 

float getInfoFromSensor(char message[10]);

Elle prend en paramètre l'ID spécifié précédemment, et renvoie un float correspondant à la mesure du capteur. L'utilisateur de cette fonction doit donc connaître à l'avance l'identifiant du capteur, et aussi le type de valeur retourné pour pouvoir les traiter en amont. Si ces conditions ne sont pas respectés, l'API ne garantira pas la pertinence du résultat.
